{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nexport const useEffectOnce = (effect, dependancies) => {\n  _s();\n  //Preserving the true by default as initial render cycle\n  const initialRender = useRef(true);\n  useEffect(() => {\n    let effectReturns = () => {};\n    if (initialRender.current) {\n      initialRender.current = false;\n    } else {\n      effectReturns = effect();\n    }\n    if (effectReturns && typeof effectReturns === 'function') {\n      return effectReturns;\n    }\n    return undefined;\n  }, dependancies);\n};\n_s(useEffectOnce, \"lE8UlN1U/np46g/Jy0ook9k9Yss=\");","map":{"version":3,"names":["useEffect","useRef","useEffectOnce","effect","dependancies","_s","initialRender","effectReturns","current","undefined"],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/common/hooks/use-effect-once.ts"],"sourcesContent":["import { useEffect, useRef, DependencyList, EffectCallback } from 'react';\n\nexport const useEffectOnce = (effect: EffectCallback, dependancies?: DependencyList) => {\n  //Preserving the true by default as initial render cycle\n  const initialRender = useRef(true);\n\n  useEffect(() => {\n\n    let effectReturns: void | (() => void) = () => {\n    };\n\n    if (initialRender.current) {\n      initialRender.current = false;\n    } else {\n      effectReturns = effect();\n    }\n\n    if (effectReturns && typeof effectReturns === 'function') {\n      return effectReturns;\n    }\n    return undefined;\n  }, dependancies);\n};\n\n\n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAwC,OAAO;AAEzE,OAAO,MAAMC,aAAa,GAAGA,CAACC,MAAsB,EAAEC,YAA6B,KAAK;EAAAC,EAAA;EACtF;EACA,MAAMC,aAAa,GAAGL,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IAEd,IAAIO,aAAkC,GAAGA,CAAA,KAAM,CAC/C,CAAC;IAED,IAAID,aAAa,CAACE,OAAO,EAAE;MACzBF,aAAa,CAACE,OAAO,GAAG,KAAK;IAC/B,CAAC,MAAM;MACLD,aAAa,GAAGJ,MAAM,CAAC,CAAC;IAC1B;IAEA,IAAII,aAAa,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;MACxD,OAAOA,aAAa;IACtB;IACA,OAAOE,SAAS;EAClB,CAAC,EAAEL,YAAY,CAAC;AAClB,CAAC;AAACC,EAAA,CApBWH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}