{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { reviewsApi } from '../api/reviews-api';\nconst initialState = {\n  reviews: {}\n};\nconst slice = createSlice({\n  name: 'ReviewsReducer',\n  initialState: initialState,\n  reducers: {\n    setReviewsAC(state, action) {\n      state.reviews[action.payload.tsId] = action.payload.reviews;\n    }\n  }\n});\nexport const reviewsReducer = slice.reducer;\nexport const setReviewsAC = slice.actions.setReviewsAC;\nexport const reviewsTC = tsId => dispatch => {\n  reviewsApi.getReviews(tsId).then(res => {\n    console.log('REVIEWS>>>', res.data.response);\n    // dispatch(setReviewsAC(res?.data?.shops));\n  }).catch(error => {\n    dispatch({\n      type: 'reviews/error',\n      payload: error.message\n    });\n  });\n};","map":{"version":3,"names":["createSlice","reviewsApi","initialState","reviews","slice","name","reducers","setReviewsAC","state","action","payload","tsId","reviewsReducer","reducer","actions","reviewsTC","dispatch","getReviews","then","res","console","log","data","response","catch","error","type","message"],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/redux/reviews-reducer.ts"],"sourcesContent":["import { Dispatch } from 'redux';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Shop } from './types/Shop';\nimport { shopsApi } from '../api/shops-api';\nimport { Review } from './types/Review';\nimport { reviewsApi } from '../api/reviews-api';\n\nexport type ReviewsState = {\n  reviews: {\n    [tsId: string]: Array<Review>;\n  };\n};\n\nconst initialState: ReviewsState = {\n  reviews: {},\n};\nconst slice = createSlice({\n  name: 'ReviewsReducer',\n  initialState: initialState,\n  reducers: {\n    setReviewsAC(state, action: PayloadAction<{tsId: string; reviews: Array<Review>;}>) {\n      state.reviews[action.payload.tsId] = action.payload.reviews;\n    }\n  }\n});\n\nexport const reviewsReducer = slice.reducer;\nexport const setReviewsAC = slice.actions.setReviewsAC;\n\n\nexport const reviewsTC = (tsId: string) => (dispatch: Dispatch) => {\n  reviewsApi.getReviews(tsId)\n    .then((res) => {\n      console.log('REVIEWS>>>', res.data.response);\n      // dispatch(setReviewsAC(res?.data?.shops));\n    })\n    .catch((error) => {\n      dispatch({ type: 'reviews/error', payload: error.message });\n    });\n};\n"],"mappings":"AACA,SAASA,WAAW,QAAuB,kBAAkB;AAI7D,SAASC,UAAU,QAAQ,oBAAoB;AAQ/C,MAAMC,YAA0B,GAAG;EACjCC,OAAO,EAAE,CAAC;AACZ,CAAC;AACD,MAAMC,KAAK,GAAGJ,WAAW,CAAC;EACxBK,IAAI,EAAE,gBAAgB;EACtBH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,YAAYA,CAACC,KAAK,EAAEC,MAA8D,EAAE;MAClFD,KAAK,CAACL,OAAO,CAACM,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,GAAGF,MAAM,CAACC,OAAO,CAACP,OAAO;IAC7D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMS,cAAc,GAAGR,KAAK,CAACS,OAAO;AAC3C,OAAO,MAAMN,YAAY,GAAGH,KAAK,CAACU,OAAO,CAACP,YAAY;AAGtD,OAAO,MAAMQ,SAAS,GAAIJ,IAAY,IAAMK,QAAkB,IAAK;EACjEf,UAAU,CAACgB,UAAU,CAACN,IAAI,CAAC,CACxBO,IAAI,CAAEC,GAAG,IAAK;IACbC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,GAAG,CAACG,IAAI,CAACC,QAAQ,CAAC;IAC5C;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBT,QAAQ,CAAC;MAAEU,IAAI,EAAE,eAAe;MAAEhB,OAAO,EAAEe,KAAK,CAACE;IAAQ,CAAC,CAAC;EAC7D,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}