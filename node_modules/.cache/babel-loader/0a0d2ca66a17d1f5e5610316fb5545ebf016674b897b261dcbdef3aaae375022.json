{"ast":null,"code":"export let SortOrder = /*#__PURE__*/function (SortOrder) {\n  SortOrder[\"DESCENDING\"] = \"descending\";\n  SortOrder[\"ASCENDING\"] = \"ascending\";\n  return SortOrder;\n}({});\nexport const sortArrayByCreationDate = (arr, sortOrder) => {\n  const sortedArray = [...arr];\n  sortedArray.sort((a, b) => {\n    const dateA = new Date(a.creationDate);\n    const dateB = new Date(b.creationDate);\n    if (sortOrder === 'ascending') {\n      return dateA.getTime() - dateB.getTime();\n    } else {\n      return dateB.getTime() - dateA.getTime();\n    }\n  });\n  return sortedArray;\n};","map":{"version":3,"names":["SortOrder","sortArrayByCreationDate","arr","sortOrder","sortedArray","sort","a","b","dateA","Date","creationDate","dateB","getTime"],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/utils/sort-array-by-creation-date.ts"],"sourcesContent":["export enum SortOrder {\n  DESCENDING = 'descending',\n  ASCENDING = 'ascending'\n}\n\nexport const sortArrayByCreationDate = <T extends { creationDate: string; }>(arr: T[], sortOrder: SortOrder): T[] => {\n  const sortedArray = [...arr];\n\n  sortedArray.sort((a, b) => {\n    const dateA = new Date(a.creationDate);\n    const dateB = new Date(b.creationDate);\n\n    if (sortOrder === 'ascending') {\n      return dateA.getTime() - dateB.getTime();\n    } else {\n      return dateB.getTime() - dateA.getTime();\n    }\n  });\n\n  return sortedArray;\n};\n"],"mappings":"AAAA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAKrB,OAAO,MAAMC,uBAAuB,GAAGA,CAAsCC,GAAQ,EAAEC,SAAoB,KAAU;EACnH,MAAMC,WAAW,GAAG,CAAC,GAAGF,GAAG,CAAC;EAE5BE,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACzB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACI,YAAY,CAAC;IACtC,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,YAAY,CAAC;IAEtC,IAAIP,SAAS,KAAK,WAAW,EAAE;MAC7B,OAAOK,KAAK,CAACI,OAAO,CAAC,CAAC,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC;IAC1C,CAAC,MAAM;MACL,OAAOD,KAAK,CAACC,OAAO,CAAC,CAAC,GAAGJ,KAAK,CAACI,OAAO,CAAC,CAAC;IAC1C;EACF,CAAC,CAAC;EAEF,OAAOR,WAAW;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}