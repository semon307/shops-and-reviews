{"ast":null,"code":"var _jsxFileName = \"/Applications/work/test_tasks/coding-challenge-consumer-semen/src/components/rating.tsx\";\nimport React from 'react';\nimport { Star } from './icons/star';\nimport { Color } from './ui/color';\nimport { Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rating = props => {\n  const filledStars = Math.round(props.rating);\n  const emptyStars = 5 - filledStars;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 0.5,\n    direction: 'row',\n    children: [[...Array(filledStars)].map((_, index) => /*#__PURE__*/_jsxDEV(Star, {\n      backgroundColor: Color.BASE_YELLOW\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)), [...Array(emptyStars)].map((_, index) => /*#__PURE__*/_jsxDEV(Star, {\n      backgroundColor: Color.BASE_GRAY\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Rating;\nvar _c;\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"names":["React","Star","Color","Stack","jsxDEV","_jsxDEV","Rating","props","filledStars","Math","round","rating","emptyStars","spacing","direction","children","Array","map","_","index","backgroundColor","BASE_YELLOW","fileName","_jsxFileName","lineNumber","columnNumber","BASE_GRAY","_c","$RefreshReg$"],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/components/rating.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { Star } from './icons/star';\nimport { Color } from './ui/color';\nimport { Stack } from '@mui/material';\n\ntype RatingProps = {\n  rating: number;\n};\nexport const Rating: FC<RatingProps> = (props) => {\n  const filledStars = Math.round(props.rating);\n  const emptyStars = 5 - filledStars;\n\n  return (\n    <Stack spacing={0.5} direction={'row'}>\n      {[...Array(filledStars)].map((_, index) => (\n        <Star key={index} backgroundColor={Color.BASE_YELLOW}/>\n      ))}\n      {[...Array(emptyStars)].map((_, index) => (\n        <Star key={index} backgroundColor={Color.BASE_GRAY}/>\n      ))}\n    </Stack>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKtC,OAAO,MAAMC,MAAuB,GAAIC,KAAK,IAAK;EAChD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,MAAM,CAAC;EAC5C,MAAMC,UAAU,GAAG,CAAC,GAAGJ,WAAW;EAElC,oBACEH,OAAA,CAACF,KAAK;IAACU,OAAO,EAAE,GAAI;IAACC,SAAS,EAAE,KAAM;IAAAC,QAAA,GACnC,CAAC,GAAGC,KAAK,CAACR,WAAW,CAAC,CAAC,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACpCd,OAAA,CAACJ,IAAI;MAAamB,eAAe,EAAElB,KAAK,CAACmB;IAAY,GAA1CF,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsC,CACvD,CAAC,EACD,CAAC,GAAGT,KAAK,CAACJ,UAAU,CAAC,CAAC,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACnCd,OAAA,CAACJ,IAAI;MAAamB,eAAe,EAAElB,KAAK,CAACwB;IAAU,GAAxCP,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoC,CACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACE,EAAA,GAdWrB,MAAuB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}