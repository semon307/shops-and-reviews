{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { shopsApi } from '../api/shops-api';\nconst initialState = {\n  shops: []\n};\nconst slice = createSlice({\n  name: 'shopsReducer',\n  initialState: initialState,\n  reducers: {\n    setShopsAC(state, action) {\n      state.shops = action.payload;\n    }\n  }\n});\nexport const shopsReducer = slice.reducer;\nexport const setShopsAC = slice.actions.setShopsAC;\nexport const shopsTC = query => dispatch => {\n  shopsApi.getShops(query).then(res => {\n    var _res$data, _res$data2;\n    console.log('shops fetched>>', res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.shops);\n    dispatch(setShopsAC(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.shops));\n  }).catch(error => {\n    dispatch({\n      type: 'shops/error',\n      payload: error.message\n    });\n  });\n};","map":{"version":3,"names":["createSlice","shopsApi","initialState","shops","slice","name","reducers","setShopsAC","state","action","payload","shopsReducer","reducer","actions","shopsTC","query","dispatch","getShops","then","res","_res$data","_res$data2","console","log","data","catch","error","type","message"],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/redux/shops-reducer.ts"],"sourcesContent":["import { Dispatch } from 'redux';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Shop } from './types/Shop';\nimport { shopsApi } from '../api/shops-api';\n\nexport type ShopsState = {\n  shops: Array<Shop>;\n};\n\nconst initialState: ShopsState = {\n  shops: [],\n\n};\nconst slice = createSlice({\n  name: 'shopsReducer',\n  initialState: initialState,\n  reducers: {\n    setShopsAC(state, action: PayloadAction<Array<Shop>>) {\n      state.shops = action.payload;\n    }\n  }\n});\n\nexport const shopsReducer = slice.reducer;\nexport const setShopsAC = slice.actions.setShopsAC;\n\n\nexport const shopsTC = (query: string) => (dispatch: Dispatch) => {\n  shopsApi.getShops(query)\n    .then((res) => {\n      console.log('shops fetched>>', res?.data?.shops);\n      dispatch(setShopsAC(res?.data?.shops));\n    })\n    .catch((error) => {\n      dispatch({ type: 'shops/error', payload: error.message });\n    });\n};\n"],"mappings":"AACA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,SAASC,QAAQ,QAAQ,kBAAkB;AAM3C,MAAMC,YAAwB,GAAG;EAC/BC,KAAK,EAAE;AAET,CAAC;AACD,MAAMC,KAAK,GAAGJ,WAAW,CAAC;EACxBK,IAAI,EAAE,cAAc;EACpBH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAEC,MAAkC,EAAE;MACpDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGP,KAAK,CAACQ,OAAO;AACzC,OAAO,MAAML,UAAU,GAAGH,KAAK,CAACS,OAAO,CAACN,UAAU;AAGlD,OAAO,MAAMO,OAAO,GAAIC,KAAa,IAAMC,QAAkB,IAAK;EAChEf,QAAQ,CAACgB,QAAQ,CAACF,KAAK,CAAC,CACrBG,IAAI,CAAEC,GAAG,IAAK;IAAA,IAAAC,SAAA,EAAAC,UAAA;IACbC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,GAAG,aAAHA,GAAG,wBAAAC,SAAA,GAAHD,GAAG,CAAEK,IAAI,cAAAJ,SAAA,uBAATA,SAAA,CAAWjB,KAAK,CAAC;IAChDa,QAAQ,CAACT,UAAU,CAACY,GAAG,aAAHA,GAAG,wBAAAE,UAAA,GAAHF,GAAG,CAAEK,IAAI,cAAAH,UAAA,uBAATA,UAAA,CAAWlB,KAAK,CAAC,CAAC;EACxC,CAAC,CAAC,CACDsB,KAAK,CAAEC,KAAK,IAAK;IAChBV,QAAQ,CAAC;MAAEW,IAAI,EAAE,aAAa;MAAEjB,OAAO,EAAEgB,KAAK,CAACE;IAAQ,CAAC,CAAC;EAC3D,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}