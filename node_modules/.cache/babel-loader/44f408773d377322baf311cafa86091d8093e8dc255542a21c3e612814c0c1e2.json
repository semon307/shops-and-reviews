{"ast":null,"code":"var _s = $RefreshSig$();\nimport { combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { shopsReducer } from './shops-reducer';\nimport { useDispatch } from 'react-redux';\nimport { reviewsReducer } from './reviews-reducer';\nconst rootReducer = combineReducers({\n  shops: shopsReducer,\n  reviews: reviewsReducer\n});\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).prepend(thunkMiddleware)\n});\nexport const useTypedDispatch = () => {\n  _s();\n  return useDispatch();\n};\n\n// @ts-ignore\n_s(useTypedDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nwindow.store = store;","map":{"version":3,"names":["combineReducers","thunkMiddleware","configureStore","shopsReducer","useDispatch","reviewsReducer","rootReducer","shops","reviews","store","reducer","middleware","getDefaultMiddleware","serializableCheck","prepend","useTypedDispatch","_s","window"],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/redux/store.ts"],"sourcesContent":["import { AnyAction, combineReducers } from 'redux';\nimport thunkMiddleware, { ThunkDispatch } from 'redux-thunk';\nimport {configureStore} from '@reduxjs/toolkit';\nimport { shopsReducer } from './shops-reducer';\nimport { useDispatch } from 'react-redux';\nimport { reviewsReducer } from './reviews-reducer';\n\nconst rootReducer = combineReducers({\n  shops: shopsReducer,\n  reviews: reviewsReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(\n    {\n      serializableCheck: false,\n    }\n  ).prepend(thunkMiddleware),\n});\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\n\n\nexport type TypedDispatch = ThunkDispatch<AppRootStateType, any, AnyAction>;\nexport const useTypedDispatch = () => useDispatch<TypedDispatch>();\n\n\n// @ts-ignore\nwindow.store = store;\n"],"mappings":";AAAA,SAAoBA,eAAe,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAyB,aAAa;AAC5D,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,mBAAmB;AAElD,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAClCO,KAAK,EAAEJ,YAAY;EACnBK,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,KAAK,GAAGP,cAAc,CAAC;EAClCQ,OAAO,EAAEJ,WAAW;EACpBK,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CACxD;IACEC,iBAAiB,EAAE;EACrB,CACF,CAAC,CAACC,OAAO,CAACb,eAAe;AAC3B,CAAC,CAAC;AAMF,OAAO,MAAMc,gBAAgB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMZ,WAAW,CAAgB,CAAC;AAAA;;AAGlE;AAAAY,EAAA,CAHaD,gBAAgB;EAAA,QAASX,WAAW;AAAA;AAIjDa,MAAM,CAACR,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}