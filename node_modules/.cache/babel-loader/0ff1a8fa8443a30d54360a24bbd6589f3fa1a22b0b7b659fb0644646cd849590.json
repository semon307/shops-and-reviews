{"ast":null,"code":"var _jsxFileName = \"/Applications/work/test_tasks/coding-challenge-consumer-semen/src/pages/shops/shop-preview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { ReviewCard } from '../../components/review-card';\nimport { Color } from '../../components/ui/color';\nimport { useTypedDispatch } from '../../redux/store';\nimport { useEffectOnce } from '../../common/hooks/use-effect-once';\nimport { setReviewsTC } from '../../redux/reviews-reducer';\nimport { CircularProgress, Stack, Button } from '@mui/material';\nimport { convertToNumber } from '../../utils/convert-to-number';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopPreview = props => {\n  _s();\n  var _reviewsState$props$t, _reviewsState$props$t2, _reviewsState$props$t3;\n  const reviewsState = useSelector(state => state.reviews);\n  const navigate = useNavigate();\n  const dispatch = useTypedDispatch();\n  useEffectOnce(() => {\n    if (!reviewsState[props.tsId]) {\n      dispatch(setReviewsTC(props.tsId));\n    }\n  });\n  useEffect(() => {\n    console.log('reviews>>>', reviewsState);\n  }, [reviewsState]);\n  if ((_reviewsState$props$t = reviewsState[props.tsId]) !== null && _reviewsState$props$t !== void 0 && _reviewsState$props$t.isLoading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 51\n  }, this);\n  if ((_reviewsState$props$t2 = reviewsState[props.tsId]) !== null && _reviewsState$props$t2 !== void 0 && _reviewsState$props$t2.error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reviewsState[props.tsId].error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 47\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    children: [reviewsState === null || reviewsState === void 0 ? void 0 : (_reviewsState$props$t3 = reviewsState[props.tsId]) === null || _reviewsState$props$t3 === void 0 ? void 0 : _reviewsState$props$t3.reviews.slice(0, 3).map((review, index) => {\n      return /*#__PURE__*/_jsxDEV(ReviewCard, {\n        mark: convertToNumber(review.mark),\n        comment: review.comment || review.markDescription,\n        creationDate: review.creationDate,\n        backgroundColor: index % 2 === 1 ? Color.LIGHT_GRAY : Color.BASE_WHITE\n      }, review.UID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate(`/reviews/${props.tsId}`),\n      children: \"view more!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopPreview, \"LAGU/ehSK9U0f/Vh8aTmldmA6qo=\", false, function () {\n  return [useSelector, useNavigate, useTypedDispatch, useEffectOnce];\n});\n_c = ShopPreview;\nvar _c;\n$RefreshReg$(_c, \"ShopPreview\");","map":{"version":3,"names":["React","useEffect","useSelector","useNavigate","ReviewCard","Color","useTypedDispatch","useEffectOnce","setReviewsTC","CircularProgress","Stack","Button","convertToNumber","jsxDEV","_jsxDEV","ShopPreview","props","_s","_reviewsState$props$t","_reviewsState$props$t2","_reviewsState$props$t3","reviewsState","state","reviews","navigate","dispatch","tsId","console","log","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","error","children","spacing","slice","map","review","index","mark","comment","markDescription","creationDate","backgroundColor","LIGHT_GRAY","BASE_WHITE","UID","onClick","_c","$RefreshReg$"],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/pages/shops/shop-preview.tsx"],"sourcesContent":["import React, { FC, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { ReviewCard } from '../../components/review-card';\nimport { Color } from '../../components/ui/color';\nimport { AppRootStateType, useTypedDispatch } from '../../redux/store';\nimport { useEffectOnce } from '../../common/hooks/use-effect-once';\nimport { ReviewsState, setReviewsTC } from '../../redux/reviews-reducer';\nimport { CircularProgress, Stack, Button } from '@mui/material';\nimport { convertToNumber } from '../../utils/convert-to-number';\n\ntype ShopPreviewProps = {\n  tsId: string;\n};\n\nexport const ShopPreview: FC<ShopPreviewProps> = (props) => {\n  const reviewsState = useSelector<AppRootStateType, ReviewsState>(\n    (state) => state.reviews\n  );\n\n  const navigate = useNavigate();\n\n  const dispatch = useTypedDispatch();\n\n  useEffectOnce(() => {\n    if(!reviewsState[props.tsId]){\n      dispatch(setReviewsTC(props.tsId));\n    }\n  });\n\n  useEffect(() => {\n    console.log('reviews>>>', reviewsState);\n  }, [reviewsState]);\n\n  if (reviewsState[props.tsId]?.isLoading) return <CircularProgress/>;\n  if (reviewsState[props.tsId]?.error) return <div>{reviewsState[props.tsId].error}</div>;\n\n  return (\n    <Stack spacing={2}>\n      {reviewsState?.[props.tsId]?.reviews.slice(0, 3).map((review, index) => {\n        return (\n          <ReviewCard\n            key={review.UID}\n            mark={convertToNumber(review.mark)}\n            comment={review.comment || review.markDescription}\n            creationDate={review.creationDate}\n            backgroundColor={index % 2 === 1 ? Color.LIGHT_GRAY : Color.BASE_WHITE}\n          />\n        );\n      })}\n      <Button onClick={() => navigate(`/reviews/${props.tsId}`)}>view more!</Button>\n    </Stack>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}