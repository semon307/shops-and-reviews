{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Applications/work/test_tasks/coding-challenge-consumer-semen/src/redux/shops-reducer.ts"],"sourcesContent":["import { Dispatch } from 'redux';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Shop } from './types/shop/shop';\nimport { shopsApi } from '../api/shops-api';\n\nexport type ShopsState = {\n  // shops: Array<Shop>;\n  [searchQuery: string]: {\n    shops: Array<Shop>;\n    totalPageCount: number;\n  };\n  isLoading: boolean;\n  error: string | null;\n};\n\n// const initialState: ShopsState = {\n//   isLoading: false,\n//   error: null,\n// };\n// const slice = createSlice({\n//   name: 'shopsReducer',\n//   initialState: initialState,\n//   reducers: {\n//     setShopsAC(state, action: PayloadAction<Array<Shop>>) {\n//       state.shops = action.payload;\n//     },\n//     setLoadingAC(state, action: PayloadAction<boolean>) {\n//       state.isLoading = action.payload;\n//     },\n//     setErrorAC(state, action: PayloadAction<string | null>) {\n//       state.error = action.payload;\n//     },\n//   }\n// });\n//\n// export const shopsReducer = slice.reducer;\n// export const setShopsAC = slice.actions.setShopsAC;\n// const setLoadingAC = slice.actions.setLoadingAC;\n// const setErrorAC = slice.actions.setErrorAC;\n//\n//\n// export const setShopsTC = (query: string) => (dispatch: Dispatch) => {\n//   dispatch(setErrorAC(null));\n//   dispatch(setLoadingAC(true));\n//   shopsApi.getShops(query)\n//     .then((res) => {\n//       dispatch(setShopsAC(res?.data?.shops));\n//     })\n//     .catch((error) => {\n//       dispatch({ type: 'shops/error', payload: error.message });\n//       dispatch(setErrorAC('Something went wrong:('));\n//     })\n//     .finally(() => {\n//       dispatch(setLoadingAC(false));\n//     });\n// };\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}